# -*- coding: utf-8 -*-
"""Codsoft Task 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CG0XMPh8fs2m7IZ_U_sCHi0WLbB7FnoN
"""

#defining the task data structure
class Task:
    def __init__(self, title, description=""):
        self.title = title
        self.description = description
        self.is_done = False

    def __repr__(self):
        return f"Task('{self.title}', '{self.description}', {self.is_done})"

#Implementation of the to do list manager
class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, title, description=""):
        self.tasks.append(Task(title, description))

    def remove_task(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks.pop(index)
        else:
            print("Task not found.")

    def update_task(self, index, title=None, description=None, is_done=None):
        if 0 <= index < len(self.tasks):
            task = self.tasks[index]
            if title:
                task.title = title
            if description:
                task.description = description
            if is_done is not None:
                task.is_done = is_done
        else:
            print("Task not found.")

    def list_tasks(self):
        for idx, task in enumerate(self.tasks):
            status = "Done" if task.is_done else "Not Done"
            print(f"{idx}. {task.title} - {status}\n    {task.description}")

#Implementing the Command-Line Interface to create functions to handle user input and interact with the To Do List.
def print_menu():
    print("\nTo-Do List Menu")
    print("1. Add Task")
    print("2. Remove Task")
    print("3. Update Task")
    print("4. List Tasks")
    print("5. Exit")

def main():
    to_do_list = ToDoList()

    while True:
        print_menu()
        choice = input("Enter your choice: ")

        if choice == "1":
            title = input("Enter task title: ")
            description = input("Enter task description: ")
            to_do_list.add_task(title, description)
        elif choice == "2":
            index = int(input("Enter task index to remove: "))
            to_do_list.remove_task(index)
        elif choice == "3":
            index = int(input("Enter task index to update: "))
            title = input("Enter new title (or leave blank): ")
            description = input("Enter new description (or leave blank): ")
            is_done = input("Is the task done? (yes/no): ").lower() == 'yes'
            to_do_list.update_task(index, title or None, description or None, is_done)
        elif choice == "4":
            to_do_list.list_tasks()
        elif choice == "5":
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()